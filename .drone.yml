debug: true

build:
  image: resin/rpi-raspbian:jessie
  environment:
    - PACKAGECLOUD_API_TOKEN=$$PACKAGECLOUD_API_TOKEN
    - PACKAGECLOUD_USER_REPO=$$PACKAGECLOUD_USER_REPO
  commands:
    - apt-get update && apt-get install -y git curl bash make ca-certificates
    - export VERSION=$(cat VERSION)
    - export OUTPUT_NAME=$(basename `git rev-parse --show-toplevel`)
    - export PACKAGE_VERSION=${VERSION}-${DRONE_BUILD_NUMBER}
    - export PACKAGE_NAME=hypriot-cluster-lab
    - export TIMESTAMP=$(date +"%Y-%m-%d_%H%M")
    - export REPO=$(git rev-parse --short HEAD)
    - export BUILD_RESULTS=/drone/src/buildresult
    - export BUILD_DIR=${BUILD_RESULTS}/arm-binaries/${PACKAGE_NAME}/${TIMESTAMP}_${REPO}
    - export DESCRIPTION="$(cat DESCRIPTION)"
    - export DEPENDENCIES="$(cat DEPENDENCIES)"
    - mkdir -p ${BUILD_DIR}/package/${PACKAGE_NAME}
    - cp -r package/* ${BUILD_DIR}/package/${PACKAGE_NAME}/
    - sed -i'' "s/<VERSION>/${PACKAGE_VERSION}/g" ${BUILD_DIR}/package/${PACKAGE_NAME}/DEBIAN/control
    - sed -i'' "s/<NAME>/hypriot-${OUTPUT_NAME}/g" ${BUILD_DIR}/package/${PACKAGE_NAME}/DEBIAN/control
    - sed -i'' "s/<SIZE>/60/g" ${BUILD_DIR}/package/${PACKAGE_NAME}/DEBIAN/control
    - sed -i'' "s/<DESCRIPTION>/${DESCRIPTION}/g" ${BUILD_DIR}/package/${PACKAGE_NAME}/DEBIAN/control
    - sed -i'' "s/<DEPENDS>/${DEPENDENCIES}/g" ${BUILD_DIR}/package/${PACKAGE_NAME}/DEBIAN/control
    - apt-get install -y shellcheck
    - shellcheck ${BUILD_DIR}/package/${PACKAGE_NAME}/usr/local/bin/cluster-lab
    - cd ${BUILD_DIR}/package && dpkg-deb --build ${PACKAGE_NAME}
    - rm -R ${BUILD_DIR}/package/${PACKAGE_NAME}
    - cp ${BUILD_DIR}/package/${PACKAGE_NAME}.deb ${BUILD_RESULTS}/
#    - echo "upload debian package to package cloud"
#    - curl -X POST https://$PACKAGECLOUD_API_TOKEN:@packagecloud.io/api/v1/repos/$PACKAGECLOUD_USER_REPO/packages.json -F "package[distro_version_id]=24" -F "package[package_file]=@${BUILD_DIR}/package/${PACKAGE_NAME}.deb"

publish:
  github_release:
    api_key: $$GITHUB_TOKEN
    files:
      - /drone/src/buildresult/*

notify:
  slack:
    webhook_url: $$SLACK_WEBHOOK_URL
    channel: buildstatus
    username: Drone
    when:
      started: false
      success: true
      failure: true

